//- 
//- **Mục đích của đoạn mã này**:
//- 
//- 1. **Chức năng thêm mới hội đồng**:
//-    - Hiển thị giao diện để thêm thông tin về một hội đồng, bao gồm:
//-      - Tên hội đồng
//-      - Chủ tịch, thư ký và các ủy viên của hội đồng
//- 
//- 2. **Tương tác người dùng**:
//-    - Người dùng có thể chọn giảng viên từ danh sách thả xuống được lấy từ API.
//-    - Các trường bắt buộc như tên hội đồng và vị trí chủ tịch/thư ký phải được nhập trước khi lưu.
//- 
//- 3. **Giao diện động**:
//-    - Tự động tải danh sách giảng viên từ API và điền vào các dropdown tương ứng.
//-    - Cho phép người dùng hủy hoặc lưu thông tin đã nhập.
//- 
//- **Chi tiết kỹ thuật**:
//-    - **HTML**: Cấu trúc giao diện thêm hội đồng với các trường nhập dữ liệu và nút hành động.
//-    - **CSS**: Định dạng hiển thị để giao diện đẹp mắt và dễ sử dụng.
//-    - **JavaScript**: 
//-      - Sử dụng Axios để gọi API lấy dữ liệu người dùng.
//-      - Lọc danh sách người dùng để chỉ lấy vai trò giảng viên.
//-      - Thêm dữ liệu vào các dropdown liên quan.
//- 
//- **Kết quả mong đợi**:
//- - Một giao diện mượt mà và dễ sử dụng để thêm mới hội đồng.
//- - Đảm bảo dữ liệu đầu vào chính xác và đầy đủ trước khi lưu.
//- - Tương tác động với API để luôn có dữ liệu giảng viên mới nhất.
//- 

div(id=`newcouncil`).modal
    div.modal-dialog(style="width: 80vw; margin-top: 0vh;")
        div.modal-content(style="max-height: 80vh; width: 100vh; overflow-y: auto; padding: 5px 10px;")
            span.close(onclick="closeNewcouncil()") &times;
            h3 Thêm hội đồng
            form(class=`edit-form`)
                label Tên hội đồng
                input(type="text" name="editName" class="form-control" id=`TenHoiDong`  required)
                label.control-label Chủ tịch
                select.form-control.form-control-sm.select2(id=`userDropdown-ChuTich`,required)
                    option(value="" disabled selected)
                label.control-label.control-label-1 Thư ký
                select.form-control.form-control-sm.select2(id=`userDropdown-ThuKy`,required)
                    option(value="" disabled selected)
                label.control-label.control-label-1 Uỷ viên 1
                select.form-control.form-control-sm.select2(id=`userDropdown-UyVien1`)
                    option(value="" disabled selected)
                label.control-label.control-label-1 Uỷ viên 2
                select.form-control.form-control-sm.select2(id=`userDropdown-UyVien2`)
                    option(value="" disabled selected)
                .col-lg-12.text-right.justify-content-center.d-flex.mt-3
                    button.btn.btn-primary.mr-3(type="button" onclick=`saveNewcouncil()`) Lưu
                    button.btn.btn-secondary(type="button" onclick=`closeNewcouncil()`) Hủy

    style.
        .box-council {
           margin-top: 100px;
           margin-right: 250px;
           margin-left: 250px;
        }
        .card-footer {
           margin-top: 50px;

        }
        .form-group-1 {
            display: none;
        }
        
    script.
            
        document.addEventListener('DOMContentLoaded', function() {
            // Gọi API để lấy danh sách người dùng bằng Axios
            axios.get('/api/v1/users')
                .then(function(response) {
                    const users = response.data.data; // Lấy dữ liệu từ API và đảm bảo nó không null

                    // Tìm tất cả dropdown có id bắt đầu với "userDropdown"
                    const userDropdowns = document.querySelectorAll('select[id^="userDropdown"]');

                    // Làm sạch dropdown trước khi thêm mới
                    userDropdowns.forEach(function(dropdown) {
                        dropdown.innerHTML = `<option value="" disabled selected></option>`;
                    });

                    // Lọc danh sách người dùng chỉ lấy giảng viên
                    const giangVienList = users.filter(user => user.role === 'giang_vien');

                    // Thêm dữ liệu giảng viên vào dropdown
                    giangVienList.forEach(function(user) {
                        const option = document.createElement('option');
                        option.value = user._id;
                        option.textContent = `${user.name} (Khoa: ${user.khoa})`;
                        userDropdowns.forEach(function(dropdown) {
                            dropdown.appendChild(option.cloneNode(true));
                        });
                    });
                })
                .catch(function(error) {
                    console.error('Error fetching user data:', error);
                });
        }, { once: true }); // Chỉ chạy một lần

