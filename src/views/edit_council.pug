//- 
//- File này được thiết kế để chỉnh sửa thông tin chi tiết của hội đồng (council) trong ứng dụng.
//- 
//- **Mục đích**:
//- Cung cấp giao diện dạng modal cho phép người dùng:
//- 1. Sửa đổi tên hội đồng.
//- 2. Thay đổi thành viên hội đồng (chủ tịch, thư ký, uỷ viên 1, uỷ viên 2).
//- 3. Lưu hoặc hủy thay đổi thông tin hội đồng.
//- 
//- **Thành phần chính**:
//- 
//- 1. **Modal (div#council-${council._id})**:
//-    - Hiển thị giao diện chỉnh sửa hội đồng với các trường nhập liệu và danh sách thả xuống để chọn thành viên.
//-    - `input` và `select`:
//-      + `input#editName-${council._id}`: Nhập tên hội đồng mới.
//-      + `select#userDropdown-editChuTich-${council._id}`: Chọn chủ tịch từ danh sách giảng viên.
//-      + `select#userDropdown-editThuKy-${council._id}`: Chọn thư ký.
//-      + `select#userDropdown-editUyVien1-${council._id}`: Chọn uỷ viên 1.
//-      + `select#userDropdown-editUyVien2-${council._id}`: Chọn uỷ viên 2.
//- 
//- 2. **Nút hành động**:
//-    - Nút "Lưu": Gọi hàm `saveEditCouncil('${council._id}')` để lưu thay đổi.
//-    - Nút "Hủy": Đóng modal mà không lưu thay đổi.
//- 
//- 3. **Script**:
//-    - Gọi API `/api/v1/users` để lấy danh sách giảng viên.
//-    - Lọc danh sách người dùng để chỉ lấy những người có vai trò là "giảng viên" (`role === 'giang_vien'`).
//-    - Thêm các giảng viên vào các dropdown trong modal.
//- 
//- **Phong cách (CSS)**:
//- Modal được căn chỉnh để hiển thị gọn gàng với chiều rộng 80% màn hình (80vw) và có kiểu dáng dễ nhìn.
//- 
//- **Chức năng chính**:
//- 1. Giao diện chỉnh sửa trực quan.
//- 2. Dropdown tự động cập nhật danh sách giảng viên từ API.
//- 3. Hỗ trợ lưu hoặc hủy chỉnh sửa thông tin hội đồng.
//- 

div(id=`council-${council._id}`).modal
    div.modal-dialog(style="width: 80vw; margin-top: 0vh;")
        div.modal-content(style="max-height: 80vh; width: 100vh; overflow-y: auto; padding: 5px 10px;")
            span.close(onclick=`closeEditCouncil('${council._id}')`) &times;
            h3 Chỉnh sửa
            form(class=`edit-form-${council._id}`)
                label Tên hội đồng
                input(type="text" name="editName" class="form-control" id=`editName-${council._id}` required)
                label.control-label Chủ tịch
                select.form-control.form-control-sm.select2(id=`userDropdown-editChuTich-${council._id}`)
                    option(value="" disabled selected)
                label.control-label.control-label-1 Thư ký
                select.form-control.form-control-sm.select2(id=`userDropdown-editThuKy-${council._id}`)
                    option(value="" disabled selected)
                label.control-label.control-label-1 Uỷ viên 1
                select.form-control.form-control-sm.select2(id=`userDropdown-editUyVien1-${council._id}`)
                    option(value="" disabled selected)
                label.control-label.control-label-1 Uỷ viên 2
                select.form-control.form-control-sm.select2(id=`userDropdown-editUyVien2-${council._id}`)
                    option(value="" disabled selected)
                .col-lg-12.text-right.justify-content-center.d-flex.mt-5
                    button.btn.btn-primary.mr-3(type="button" onclick=`saveEditCouncil('${council._id}')`) Lưu
                    button.btn.btn-secondary(type="button" onclick=`closeEditCouncil('${council._id}')`) Hủy

    //- style.
    //-     .box-council {
    //-        margin-top: 100px;
    //-        margin-right: 250px;
    //-        margin-left: 250px;
    //-     }
    //-     .card-footer {
    //-        margin-top: 50px;

    //-     }
    //-     .form-group-1 {
    //-         display: none;
    //-     }
        
    script.
        document.addEventListener('DOMContentLoaded', function() {
            axios.get('/api/v1/users')
                .then(function(response) {
                    const users = response.data.data;

                    // Tìm tất cả dropdown có id chứa "userDropdown-edit"
                    const userDropdowns = document.querySelectorAll('select[id^="userDropdown-edit"]');

                    // Làm sạch dropdown trước khi thêm dữ liệu
                    userDropdowns.forEach(function(dropdown) {
                        dropdown.innerHTML = `<option value="" disabled selected></option>`;
                    });

                    // Lọc chỉ lấy giảng viên
                    const giangVienList = users.filter(user => user.role === 'giang_vien');

                    // Thêm dữ liệu giảng viên vào dropdown
                    giangVienList.forEach(function(user) {
                        const option = document.createElement('option');
                        option.value = user._id;
                        option.textContent = `${user.name} (Học vị: ${user.trinhdo}, Khoa: ${user.khoa})`;
                        userDropdowns.forEach(function(dropdown) {
                            dropdown.appendChild(option.cloneNode(true));
                        });
                    });
                })
                .catch(function(error) {
                    console.error('Error fetching user data:', error);
                });
        }, { once: true }); // Chỉ chạy một lần
